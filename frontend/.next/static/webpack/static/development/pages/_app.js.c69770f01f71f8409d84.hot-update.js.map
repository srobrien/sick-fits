{"version":3,"file":"static/webpack/static/development/pages/_app.js.c69770f01f71f8409d84.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport Downshift from 'downshift';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\n\nconst SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String) {\n    items(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { description_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      image\n      title\n    }\n  }\n`;\n\nclass AutoComplete extends Component {\n  state = {\n    items: [],\n    loading: false\n  };\n\n  onChange = debounce(async (e, client) => {\n    console.log('called');\n\n    this.setState({ loading: true });\n    const res = await client.query({\n      query: SEARCH_ITEMS_QUERY,\n      variables: { searchTerm: e.target.value }\n    });\n    this.setState({\n      items: res.data.items,\n      loading: false\n    });\n  }, 350);\n\n  render() {\n    return (\n      <SearchStyles>\n        <Downshift>\n          {({ getInputProps, getItemProps }) => (\n            <div>\n              <ApolloConsumer>\n                {client => (\n                  <input\n                    type=\"search\"\n                    onChange={e => {\n                      e.persist();\n                      this.onChange(e, client);\n                    }}\n                  />\n                )}\n              </ApolloConsumer>\n              <DropDown>\n                {this.state.items.map(item => (\n                  <DropDownItem key={item.id}>\n                    <img src={item.image} alt={item.title} width=\"50px\" />\n                    {item.title}\n                  </DropDownItem>\n                ))}\n              </DropDown>\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    );\n  }\n}\n\nexport default AutoComplete;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAgBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AACA;AALA;AAIA;AACA;AAGA;AACA;AACA;AAFA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAdA;AA0BA;;;;AAlDA;AACA;AAoDA;;;;A","sourceRoot":""}